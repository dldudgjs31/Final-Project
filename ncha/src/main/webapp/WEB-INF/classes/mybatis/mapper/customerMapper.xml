<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="customer">

<update id="insertOrder" parameterType="com.sp.app.customer.Customer">
	INSERT ALL
		INTO store_order_list (orderNum, memberIdx,total_sales, order_date)
		VALUES(order_seq.NEXTVAL,#{memberIdx},#{total_sales},SYSDATE)
		INTO product_order_detail (orderNum, sellerId,productNum, number_sales, price)
		VALUES(order_seq.NEXTVAL,#{sellerId},#{productNum},#{number_sales},#{price})
	SELECT * FROM dual
</update>

<insert id="insertCart" parameterType="com.sp.app.customer.Customer">
	INSERT INTO store_cart(productNum, quantity, userId, cartNum)
	VALUES(#{productNum},#{quantity},#{userId} ,cart_seq.NEXTVAL)
</insert>

<select id="listProduct" parameterType="Integer" resultType="String">
		SELECT imageFilename
		FROM product_bbs b
		JOIN seller m ON b.sellerId=m.sellerId
		LEFT OUTER JOIN (
			SELECT * FROM (
				SELECT productNum, rank() over(partition by productNum order by main_imageFileNum) rank, imageFilename FROM product_image
			) WHERE rank = 1
		) i ON b.productNum = i.productNum
		WHERE b.productNum = #{productNum}
</select>

<update id="updateStock" parameterType="Integer">
	UPDATE product_bbs SET stock=#{stock} WHERE productNum=#{productNum}
</update>

<select id="readCart" parameterType="map" resultType="com.sp.app.customer.Customer">
		SELECT productName, price, discount_rate, quantity,((price-discount_rate)*quantity) total_sales, imageFilename, cartNum
		FROM store_cart c
		LEFT OUTER JOIN product_bbs b ON c.productNum=b.productNum
		LEFT OUTER JOIN (
			SELECT * FROM (
				SELECT productNum, rank() over(partition by productNum order by main_imageFileNum) rank, imageFilename FROM product_image
			) WHERE rank = 1
		) i ON c.productNum= i.productNum
		WHERE c.userId=#{userId}
		ORDER BY c.cartnum ASC
</select>

<delete id="deleteCart" parameterType="Integer">
	DELETE FROM store_cart WHERE cartNum = #{cartNum}
</delete>

<select id="readStock" parameterType="Integer" resultType="Integer">
	SELECT stock FROM product_bbs WHERE productNum = #{productNum}
</select>
<select id="readCartQuantity" parameterType="com.sp.app.customer.Customer" resultType="Integer">
	SELECT NVL(sum(quantity), 0) sum 
	FROM store_cart 
	WHERE productNum = #{productNum} AND userId = #{userId}
</select>
</mapper>