<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="event">
	<insert id="insertEvent" parameterType="com.sp.app.event.Event">
		INSERT INTO event(eventNum, sellerId, subject, imageFilename, content, start_date, end_date)
			VALUES (event_seq.NEXTVAL, #{sellerId}, #{subject},  
					#{imageFilename}, #{content}, #{start_date}, #{end_date})
	</insert>
	
	<sql id="where-list">
		<if test="condition=='all'">
			( INSTR(subject, #{keyword}) &gt; 0
				OR INSTR(content, #{keyword}) &gt; 0 )
		</if>
		<if test="condition=='subject'">
			INSTR(subject, #{keyword}) &gt; 0
		</if>
		<if test="condition=='content'">
			INSTR(content, #{keyword}) &gt; 0 
		</if>
		<if test="condition=='sellerId'">
			sellerId=#{keyword}
		</if>
	</sql>
		
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM event e
		JOIN seller s ON e.sellerId= s.sellerId
		<where>
		    e.allow = 1
			<if test="keyword!=null and keyword!='' ">
				AND <include refid="where-list"/>
			</if>
		</where>		
	</select>
	
	<!-- 예정된 이벤트는 전체 이벤트에 노출X -->
	<select id="listEvent" parameterType="map" resultType="com.sp.app.event.Event">
		SELECT eventNum, e.sellerId, subject, imageFilename, 
		       TO_CHAR(start_date,'yyyy-mm-dd')as start_date,
		       TO_CHAR(end_date,'yyyy-mm-dd')as end_date
		FROM event e
		JOIN seller s ON e.sellerId=s.sellerId
		<where>
		   ( start_date &lt; SYSDATE AND e.allow = 1 ) 
			<if test="keyword != null and keyword != ''">
				AND <include refid="where-list"/> 
			</if>
		</where>
		ORDER BY eventNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<!-- 진행중인 이벤트 리스트 -->
	<select id="listEvent_proceed" parameterType="map" resultType="com.sp.app.event.Event">
		SELECT eventNum, e.sellerId, subject, imageFilename, 
		       TO_CHAR(start_date,'yyyy-mm-dd')as start_date,
		       TO_CHAR(end_date,'yyyy-mm-dd')as end_date
		FROM event e
		JOIN seller s ON e.sellerId=s.sellerId
		<where>
		    ( start_date &lt;= SYSDATE AND end_date &gt;= SYSDATE AND e.allow = 1 ) 
			
			<if test="keyword != null and keyword != ''">
				AND <include refid="where-list"/> 
			</if>
		</where>
		ORDER BY eventNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<!-- 종료된 이벤트리스트 -->
	<select id="listEvent_end" parameterType="map" resultType="com.sp.app.event.Event">
		SELECT eventNum, e.sellerId, subject, imageFilename, 
		       TO_CHAR(start_date,'yyyy-mm-dd')as start_date,
		       TO_CHAR(end_date,'yyyy-mm-dd')as end_date
		FROM event e
		JOIN seller s ON e.sellerId=s.sellerId
		<where>
		   ( end_date &lt; SYSDATE AND e.allow = 1 ) 
			<if test="keyword != null and keyword != ''">
				AND <include refid="where-list"/> 
			</if>
		</where>
		ORDER BY eventNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="readEvent" parameterType="Integer" resultType="com.sp.app.event.Event">
		SELECT eventNum , e.sellerId, subject, imageFilename, 
				content,  TO_CHAR(start_date,'yyyy-mm-dd')as start_date,
		       TO_CHAR(end_date,'yyyy-mm-dd')as end_date
		FROM event e
		JOIN seller s ON e.sellerId=s.sellerId
		 WHERE eventNum=#{eventNum}
	</select>
	
	<!-- 이전글 -->
	<select id="preReadEvent" parameterType="map" resultType="com.sp.app.event.Event">
		SELECT eventNum, subject
		FROM event e
		JOIN seller s ON e.sellerId= s.sellerId
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (eventNum &gt; #{eventNum})
		</where>
		ORDER BY eventNum ASC
		FETCH FIRST 1 ROWS ONLY
	</select>

	<!-- 다음글 -->
	<select id="nextReadEvent" parameterType="map" resultType="com.sp.app.event.Event">
		SELECT eventNum, subject
		FROM event e
		JOIN seller s ON e.sellerId= s.sellerId
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (eventNum &lt; #{eventNum})
		</where>
		ORDER BY eventNum DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<update id="updateEvent" parameterType="com.sp.app.event.Event">
		UPDATE event SET subject=#{subject}, imageFilename=#{imageFilename},
				content=#{content}
		 WHERE eventNum=#{eventNum}
	</update>
	
	<delete id="deleteEvent" parameterType="Integer">
		DELETE FROM event WHERE eventNum=#{eventNum}
	</delete>
</mapper>